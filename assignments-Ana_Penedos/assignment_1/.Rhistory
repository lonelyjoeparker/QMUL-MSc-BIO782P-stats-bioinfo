scale_fill_manual(values=c("#0099FF", "#009999")) +
theme_classic()
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
plot.axes.labels <- element_text(face = "bold",
size = 10)
marine.violin.plot + theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
library(ggplot2)
# ggplot object representing a continuous variable against a factor
marine.violin.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude)) +
# create a violin plot with count on  the y axis and including outliers
geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
#  geom_jitter(height = 0, width = 0.2) +
# add the boxplot
geom_boxplot(width = 0.1,
fill = "white") +
# add the mean of values
stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red") +
# edit plot and axes titles and change colour depending on the factor
labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude") +
# change fill fro the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
marine.violin.plot + theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
getwd()
View(marine.violin.plot)
knitr::opts_chunk$set(echo = TRUE)
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
library(ggplot2)
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
violin.plot.appearence <- geom_violin(scale = "count",
trim = FALSE)
View(violin.plot.appearence)
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# create a violin plot with count on  the y axis and including outliers
violin.plot.appearence <- geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
##geom_jitter(height = 0, width = 0.2) +
# add the boxplot
geom_boxplot(width = 0.1,
fill = "white") +
# add the mean of values
stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red") +
# change fill from the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# apply title and axes format to the plot theme and remove legend
theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none") +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# create a violin plot with count on  the y axis and including outliers
violin.plot.appearence <- geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
##geom_jitter(height = 0, width = 0.2) +
# add the mean of values
stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red") +
# change fill from the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# apply title and axes format to the plot theme and remove legend
theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none") +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# create a violin plot with count on  the y axis and including outliers
violin.plot.appearence <- geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
##geom_jitter(height = 0, width = 0.2) +
# change fill from the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# apply title and axes format to the plot theme and remove legend
theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none") +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
# create a violin plot object with count on the y axis, including outliers
violin.plot.appearence <- geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
##geom_jitter(height = 0, width = 0.2) +
# change fill from the default colours
scale_fill_manual(values=c("#0099FF", "#009999"))
library(ggplot2)
# ggplot object representing a continuous variable against a factor
marine.violin.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude)) +
# create a violin plot with count on  the y axis and including outliers
geom_violin(scale = "count",
trim = FALSE) +
# add the sample points
#  geom_jitter(height = 0, width = 0.2) +
# add the boxplot
geom_boxplot(width = 0.1,
fill = "white") +
# add the mean of values
stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red") +
# edit plot and axes titles and change colour depending on the factor
labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude") +
# change fill fro the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
marine.violin.plot + theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
gv <- geom_violin(scale = "count",
trim = FALSE)
marine.violin.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude)) +
# create a violin plot with count on  the y axis and including outliers
gv +
# add the sample points
#  geom_jitter(height = 0, width = 0.2) +
# add the boxplot
geom_boxplot(width = 0.1,
fill = "white") +
# add the mean of values
stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red") +
# edit plot and axes titles and change colour depending on the factor
labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude") +
# change fill fro the default colours
scale_fill_manual(values=c("#0099FF", "#009999")) +
# change the plot theme to classic (no grey plot area or gridlines)
theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
marine.violin.plot + theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
gv <- geom_violin(scale = "count",
trim = FALSE)
gb <- geom_boxplot(width = 0.1,
fill = "white")
ssm <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
txy <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude")
sf <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude")
pt <- theme_classic()
ttxy <- theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
# ggplot object representing a continuous variable against a factor
marine.violin.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude)) +
# create a violin plot with count on  the y axis and including outliers
gv +
# add the sample points
#  geom_jitter(height = 0, width = 0.2) +
# add the boxplot
gb +
# add the mean of values
ssm +
# edit plot and axes titles and change colour depending on the factor
txy +
# change fill fro the default colours
sf +
# change the plot theme to classic (no grey plot area or gridlines)
pt
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
marine.violin.plot + ttxy
gv <- geom_violin(scale = "count",
trim = FALSE)
gb <- geom_boxplot(width = 0.1,
fill = "white")
ssm <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
txy <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude")
sf <- scale_fill_manual(values=c("#0099FF", "#009999"))
pt <- theme_classic()
ttxy <- theme(plot.title = plot.titles,
axis.title = plot.axes.labels,
legend.position="none")
# ggplot object representing a continuous variable against a factor
marine.violin.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude)) +
# create a violin plot with count on  the y axis and including outliers
gv +
# add the sample points
#  geom_jitter(height = 0, width = 0.2) +
# add the boxplot
gb +
# add the mean of values
ssm +
# edit plot and axes titles and change colour depending on the factor
txy +
# change fill fro the default colours
sf +
# change the plot theme to classic (no grey plot area or gridlines)
pt
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
plot.titles <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
plot.axes.labels <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
marine.violin.plot + ttxy
env.sum <- gv + gb + ssm + txy + sf + pt + ttxy
env.sum <- gv  + ssm + txy + sf + pt + ttxy
env.sum <-  ssm + txy + sf + pt + ttxy
env.sum <- gb + ssm + txy + sf + pt + ttxy
env.sum <- gv + gb + ssm + txy + sf + pt
getwd()
ls()
rm(list=ls())
ls()
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
marine <- read.table("../../labs/Assessment_1/Student_data/2018/part_1_student_1932.tdf",
sep = "\t",
header = TRUE)
head(marine) # check if there are obvious issues with data import
names(marine) # get the names of data frame variables
str(marine) # check number of observations, variables and their type
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd",
fill = "Latitude")
# set up re-usable variables to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change fill from the default colours
change.fill <- scale_fill_manual(values=c("#0099FF", "#009999"))
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + violin.plot + add.boxplot + add.mean +
change.fill + set.plot.theme + title.axes.theme + marine.latitude.titles
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd")
# set up re-usable variables to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change fill from the default colours
change.fill <- scale_fill_manual(values=c("#0099FF", "#009999"))
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + violin.plot + add.boxplot + add.mean +
change.fill + set.plot.theme + title.axes.theme + marine.latitude.titles
library(ggplot2)
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd")
# set up re-usable variables to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change fill from the default colours
change.fill <- scale_fill_manual(values=c("#0099FF", "#009999"))
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + marine.latitude.titles + violin.plot + add.boxplot + add.mean +  change.fill + set.plot.theme + title.axes.theme
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + change.fill + set.plot.theme + title.axes.theme
