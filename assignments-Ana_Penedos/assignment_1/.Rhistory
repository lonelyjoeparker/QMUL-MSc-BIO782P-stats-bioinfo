fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + marine.latitude.titles + violin.plot + add.boxplot +
add.mean + latitude.fill + set.plot.theme + title.axes.theme
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# change fill from the default colours
season.fill <- scale_fill_manual(values=c("#FF9900", "#6699FF"))
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + season.fill + set.plot.theme + title.axes.theme
hist(marine$UniFracInd)
par(mfrow=c(2,2))
hist(marine$UniFracInd[marine$season=="Aug"][marine$latitude=="temperate"])
par(mfrow=c(2,2))
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="tropical"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="tropical"])
par(mfrow=c(2,2))
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="tropical"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="tropical"])
hist(marine$UniFracInd)
par(mfrow=c(1,2))
hist(marine$UniFracInd[marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$latitude=="tropical"])
par(mfrow=c(1,2))
hist(marine$UniFracInd[marine$season=="Aug"])
hist(marine$UniFracInd[marine$season=="Jan"])
knitr::opts_chunk$set(echo = TRUE)
hist(marine$UniFracInd)
shapiro.test(marine$latitude=="temperate"])
shapiro.test(marine$UniFracInd[marine$latitude=="temperate"])
shapiro.test(marine$UniFracInd[marine$latitude=="tropical"])
library(car)
install.packages("car")
library(car)
leveneTest(UniFracInd ~ latitude, data=marine)
t.test(marine$UniFracInd[marine$latitude=="temperate"], marine$UniFracInd[marine$latitude=="tropical"])
?wilcox.test()
wilcox.test(marine$UniFracInd ~ marine$latitude)
wilcox.test(marine$latitude, y=marine$UniFracInd)
wilcox.test(y=marine$latitude, x=marine$UniFracInd)
wilcox.test(marine$UniFracInd ~ marine$latitude)
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
library(ggplot2)
# set up plot-specific elements
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd")
# change fill from the default colours
latitude.fill <- scale_fill_manual(values=c("#009999", "#0099FF"))
# set up re-usable elements to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + marine.latitude.titles + violin.plot + add.boxplot +
add.mean + latitude.fill + set.plot.theme + title.axes.theme
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# change fill from the default colours
season.fill <- scale_fill_manual(values=c("#FF9900", "#6699FF"))
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + season.fill + set.plot.theme + title.axes.theme
par(mfrow=c(1,2))
hist(marine$UniFracInd[marine$season=="Aug"])
hist(marine$UniFracInd[marine$season=="Jan"])
shapiro.test(marine$UniFracInd[marine$season=="Aug"])
shapiro.test(marine$UniFracInd[marine$season=="Jan"])
leveneTest(UniFracInd, data=marine)
leveneTest(marine$UniFracInd)
~ latitude
leveneTest(UniFracInd ~ latitude, data=marine)
latitude.num.samples <- tapply(marine$latitude, marine$latitude, FUN = "count")
latitude.num.samples <- tapply(marine$latitude, marine$latitude, FUN = "sum")
?table()
temp.num.samples <- tapply(marine$latitude, marine$latitude, FUN = "total")
temp.num.samples <- len(marine)
install.packages("plyr")
library(plyr)
temp.num.samples <- count(marine, "latitude")
install.packages("ggplot2")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
# packages used:
install.packages("ggplot2")
install.packages("plyr")
install.packages("car")
library(ggplot2)
# set up plot-specific elements
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(marine$latitude),
marine$UniFracInd,
fill = marine$latitude))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd")
# change fill from the default colours
latitude.fill <- scale_fill_manual(values=c("#009999", "#0099FF"))
# set up re-usable elements to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + marine.latitude.titles + violin.plot + add.boxplot +
add.mean + latitude.fill + set.plot.theme + title.axes.theme
temp.num.samples <- count(marine, "latitude")
library(plyr)
temp.num.samples <- count(marine, "latitude")
temp.num.samples
rm(temp.num.samples)
latitude.num.samples <- count(marine, "latitude")
latitude.num.samples
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# change fill from the default colours
season.fill <- scale_fill_manual(values=c("#FF9900", "#6699FF"))
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + season.fill + set.plot.theme + title.axes.theme
par(mfrow=c(1,2))
hist(marine$UniFracInd[marine$season=="Aug"])
hist(marine$UniFracInd[marine$season=="Jan"])
shapiro.test(marine$UniFracInd[marine$season=="Aug"])
shapiro.test(marine$UniFracInd[marine$season=="Jan"])
season.num.samples <- count(marine, "latitude")
season.num.samples
season.num.samples <- count(marine, "season")
season.num.samples
leveneTest(UniFracInd ~ season, data=marine)
library(car)
leveneTest(UniFracInd ~ latitude, data=marine)
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(marine$season),
marine$UniFracInd,
fill = marine$season))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# change fill from the default colours
season.fill <- scale_fill_manual(values=c("#FF9900", "#6699FF"))
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + season.fill + set.plot.theme + title.axes.theme
leveneTest(UniFracInd ~ season, data=marine)
t.test(marine$UniFracInd[marine$season=="Aug"], marine$UniFracInd[marine$season=="Jan"])
par(mfrow=c(2,2))
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="tropical"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="tropical"])
plot(marine$UniFracInd[marine$season=="Aug"], marine$latitude=="temperate"])
plot(marine$UniFracInd[marine$season=="Aug"], marine$UniFracInd[marine$latitude=="temperate"])
micr.diversity <-marine$UniFracInd
plot(micr.diversity[marine$season=="Aug"], micr.diversity[marine$latitude=="temperate"])
rm(micr.diversity)
# Defining variables to simplify dataframe references:
micr.diversity <-marine$UniFracInd
lati <- marine$latitude
lati <- marine$latitude
seas <- marine$season
rm(micr.diversity)
rm(lati)
rm(seas)
# Defining variables to simplify dataframe references:
diversity.col <-marine$UniFracInd
latitude.col <- marine$latitude
season.col <- marine$season
library(ggplot2)
# set up plot-specific elements
# ggplot object plotting UniFracInd against latitude
marine.latitude.plot <- ggplot(marine,
aes(factor(latitude.col),
diversity.col,
fill = latitude.col))
# specific plot title and axes labels
marine.latitude.titles <- labs(title = "Microbial Density vs. Latitude",
x = "Latitude",
y = "UniFracInd")
# change fill from the default colours
latitude.fill <- scale_fill_manual(values=c("#009999", "#0099FF"))
# set up re-usable elements to edit violin plots
# create a violin plot with count on the y axis and including outliers
violin.plot <- geom_violin(scale = "count",
trim = FALSE)
## add sample points
#geom_jitter(height = 0, width = 0.2) +
# add a boxplot
add.boxplot <- geom_boxplot(width = 0.1,
fill = "white")
# add the mean of values
add.mean <- stat_summary(fun.y = mean,
geom = "point",
shape = 23,
size = 2,
fill = "red")
# change the plot theme to classic (no grey plot area or gridlines)
set.plot.theme <- theme_classic()
# set variable for the style of plot titles;
# hjust is the horizontal position of the title
title.style <- element_text(face = "bold.italic",
size = 12,
hjust = .5)
# set variable for the style of plot axes
axes.labels.style <- element_text(face = "bold",
size = 10)
# apply title and axes format to the plot theme and remove legend
title.axes.theme <- theme(plot.title = title.style,
axis.title = axes.labels.style,
legend.position="none")
# bring plot and formatting together
marine.latitude.plot + marine.latitude.titles + violin.plot + add.boxplot +
add.mean + latitude.fill + set.plot.theme + title.axes.theme
hist(diversity.col)
par(mfrow=c(1,2))
hist(diversity.col[latitude.col=="temperate"])
hist(diversity.col[latitude.col=="tropical"])
shapiro.test(diversity.col[latitude.col=="temperate"])
shapiro.test(diversity.col[latitude.col=="tropical"])
library(plyr)
latitude.num.samples <- count(marine, "latitude")
latitude.num.samples
leveneTest(UniFracInd ~ latitude, data=marine)
leveneTest(diversity.col ~ latitude.col, data=marine)
leveneTest(diversity.col ~ latitude.col)
# set up plot-specific elements
# ggplot object plotting UniFracInd against season
marine.season.plot <- ggplot(marine,
aes(factor(season.col),
diversity.col,
fill = season.col))
# specific plot title and axes labels
marine.season.titles <- labs(title = "Microbial Density vs. Season",
x = "Season",
y = "UniFracInd")
# change fill from the default colours
season.fill <- scale_fill_manual(values=c("#FF9900", "#6699FF"))
# bring plot and formatting together
marine.season.plot + marine.season.titles + violin.plot + add.boxplot +
add.mean + season.fill + set.plot.theme + title.axes.theme
par(mfrow=c(1,2))
hist(diversity.col[season.col=="Aug"])
hist(diversity.col[season.col=="Jan"])
shapiro.test(diversity.col[season.col=="Jan"])
shapiro.test(diversity.col[season.col=="Aug"])
shapiro.test(diversity.col[season.col=="Jan"])
shapiro.test(diversity.col[season.col=="Aug"])
shapiro.test(diversity.col[season.col=="Jan"])
season.num.samples <- count(marine, "season")
season.num.samples
leveneTest(diversity.col ~ season.col)
t.test(diversity.col[season.col=="Aug"], diversity.col[season.col=="Jan"])
plot(diversity.col[season.col=="Aug"], diversity.col[latitude.col=="temperate"])
par(mfrow=c(2,2))
plot(diversity.col[season.col=="Aug"], diversity.col[latitude.col=="temperate"])
plot(diversity.col[season.col=="Aug"], diversity.col[latitude.col=="tropical"])
plot(diversity.col[season.col=="Jan"], diversity.col[latitude.col=="temperate"])
plot(diversity.col[season.col=="Jan"], diversity.col[latitude.col=="tropical"])
par(mfrow=c(2,2))
plot(diversity.col[latitude.col=="temperate"], diversity.col[season.col=="Aug"])
plot(diversity.col[latitude.col=="temperate"], diversity.col[season.col=="Jan"])
plot(diversity.col[latitude.col=="tropical"], diversity.col[season.col=="Aug"])
plot(diversity.col[latitude.col=="tropical"], diversity.col[season.col=="Jan"])
par(mfrow=c(2,2))
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Aug" & marine$latitude=="tropical"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="temperate"])
hist(marine$UniFracInd[marine$season=="Jan" & marine$latitude=="tropical"])
lm(diversity.col ~ latitude.col * season.col)
corr.div.lat.seas <- lm(diversity.col ~ latitude.col * season.col)
anova(corr.div.lat.seas)
corr.div.lat <- lm(diversity.col ~ latitude.col)
anova(corr.div.lat.seas)
corr.div.seas <- lm(diversity.col ~ season.col)
anova(corr.div.lat.seas)
corr.div.lat.seas <- lm(diversity.col ~ latitude.col * season.col)
anova(corr.div.lat.seas)
corr.div.lat <- lm(diversity.col ~ latitude.col)
anova(corr.div.lat)
corr.div.seas <- lm(diversity.col ~ season.col)
anova(corr.div.seas)
corr.div.lat.seas <- lm(diversity.col ~ latitude.col * season.col)
anova(corr.div.lat.seas)
# Correlation of diversity with latitude alone
corr.div.lat <- lm(diversity.col ~ latitude.col)
anova(corr.div.lat)
# Correlation of diversity with season alone
corr.div.seas <- lm(diversity.col ~ season.col)
anova(corr.div.seas)
# Correlation of diversity with latitude and season
corr.div.seas.lat <- lm(diversity.col ~ season.col + latitude.col)
anova(corr.div.seas.lat)
# Correlation of diversity with season and latitude
corr.div.lat.seas <- lm(diversity.col ~ latitude.col + season.col)
anova(corr.div.lat.seas)
# Correlation of diversity with an interaction of latitude and season
corr.div.i.lat.seas <- lm(diversity.col ~ latitude.col * season.col)
anova(corr.div.i.lat.seas)
# Correlation of diversity with an interaction of latitude and season
corr.div.i.seas.lat <- lm(diversity.col ~ season.col * latitude.col)
anova(corr.div.i.seas.lat)
# Correlation of diversity with an interaction of latitude and season
corr.div.i.seas.lat <- lm(diversity.col ~ season.col * latitude.col)
anova(corr.div.i.seas.lat)
ls()
rm(corr.div.i.lat.seas)
rm(corr.div.i.seas.lat)
rm(corr.div.lat)
rm(corr.div.lat.seas)
rm(corr.div.seas)
rm(corr.div.seas.lat)
ls()
# Correlation of diversity with an interaction of latitude and season
corr.seas.lat <- lm(diversity.col ~ season.col * latitude.col)
anova(corr.seas.lat)
par(mfrow=c(1,2))
hist(diversity.col[season.col=="Aug"])
hist(diversity.col[season.col=="Jan"])
t.test(diversity.col[latitude.col=="temperate"], diversity.col[latitude.col=="tropical"])
# Correlation of diversity with an interaction of latitude and season
corr.seas.lat <- lm(diversity.col ~ season.col * latitude.col)
anova(corr.seas.lat)
luciferase <- read.table("../../labs/Assessment_1/Student_data/2018/part_2_student_1932.tdf",
sep = "\t",
header = TRUE)
head(luciferase) # quick check of correct data import
names(luciferase) # check names of columns for dataset
str(luciferase) # check that factors and variables were assigned correctly
# simplify dataframe references
luciferase.expression <- luciferase$expression_fold
aa.substitutions <- luciferase$distance
ggplot(aa.substitutions, luciferase.expression)
ggplot(luciferase,
aes(aa.substitutions, luciferase.expression))
plot(aa.substitutions, luciferase.expression)
plot(aa.substitutions, log(luciferase.expression))
plot(aa.substitutions, log(luciferase.expression + 1))
plot(aa.substitutions, log(luciferase.expression))
hist(aa.substitutions)
hist(aa.substitutions)
hist(luciferase.expression)
par(mfrow=c(1,2))
hist(aa.substitutions)
hist(luciferase.expression)
plot(aa.substitutions, sqrt(luciferase.expression))
plot(aa.substitutions**2, (luciferase.expression))
plot(aa.substitutions, log(luciferase.expression))
plot(aa.substitutions, sqrt(luciferase.expression))
plot(aa.substitutions, -(luciferase.expression))
par(mfrow=c(1,2))
hist(aa.substitutions)
hist(luciferase.expression, breaks = 8)
par(mfrow=c(1,2))
hist(aa.substitutions)
hist(luciferase.expression, breaks = 10)
par(mfrow=c(1,2))
hist(aa.substitutions)
hist(luciferase.expression, breaks = 15)
par(mfrow=c(1,2))
hist(aa.substitutions)
hist(luciferase.expression)
expr.dist.model <- lm(luciferase.expression ~ aa.substitutions)
anova(expr.dist.model)
plot(anova)
expr.dist.model <- glm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
plot(expr.dist.model)
expr.dist.model <- lm(luciferase.expression ~ aa.substitutions)
anova(expr.dist.model)
plot(expr.dist.model)
expr.dist.model <- lm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
plot(expr.dist.model)
expr.dist.model <- lm(log(luciferase.expression) ~ aa.substitutions)
summary(expr.dist.model)
plot(expr.dist.model)
expr.dist.model <- lm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
plot(expr.dist.model)
expr.dist.model <- glm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
plot(expr.dist.model)
par(mfrow=c(2,2))
plot(expr.dist.model)
expr.dist.model <- glm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
expr.dist.model <- lm(luciferase.expression ~ aa.substitutions)
summary(expr.dist.model)
